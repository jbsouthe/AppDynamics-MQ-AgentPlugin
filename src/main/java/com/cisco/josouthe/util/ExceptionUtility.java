package com.cisco.josouthe.util;

import com.appdynamics.instrumentation.sdk.toolbox.reflection.ReflectorException;
import com.cisco.josouthe.exception.MQErrorException;

import java.util.concurrent.ConcurrentHashMap;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class ExceptionUtility {
    private static Pattern mqExceptionMessagePattern = Pattern.compile("^(?<errorType>.+): Completion Code \\'(?<completionCode>\\d+)\\', Reason \\'(?<reasonCode>\\d+)\\'\\.");
    private static ConcurrentHashMap<Integer, String> completionCodeMap;
    private static ConcurrentHashMap<Integer, String> reasonCodeMap;

    public static Throwable getRootCause(Exception exception ) {
        if( exception instanceof ReflectorException ) {
            if( exception.getCause() instanceof java.lang.reflect.InvocationTargetException )
                return exception.getCause().getCause();
        }
        return exception;
    }

    public static boolean exceptionMatches( Exception exception, String matchString ) {
        if( exception == null || matchString == null ) return false;
        if( exception.getCause() instanceof java.lang.reflect.InvocationTargetException ) {
            Throwable rootException = exception.getCause();
            if( rootException != null ) {
                rootException = rootException.getCause();
                if( rootException != null && "com.ibm.mq.headers.MQExceptionWrapper".equals(rootException.getClass().getCanonicalName()) ) {
                    return matchString.equals(rootException.getMessage());
                }
            }
        }
        return false;
    }

    public static MQErrorException processException(Exception exception ) {
        Throwable mqException = getMQException(exception);
        if( mqException == null ) return null;
        Matcher matcher = mqExceptionMessagePattern.matcher(mqException.getMessage());
        if( matcher.find() ) {
            String errorType = matcher.group("errorType");
            int completionCode = Integer.parseInt(matcher.group( "completionCode" ));
            int reasonCode = Integer.parseInt(matcher.group( "reasonCode" ));
            initMaps();
            return new MQErrorException( errorType, completionCode, completionCodeMap.get(completionCode), reasonCode, reasonCodeMap.get(reasonCode), mqException );
        }
        return null;
    }

    private static void initMaps() {
        if( completionCodeMap == null ) {
            completionCodeMap = new ConcurrentHashMap<>();
            completionCodeMap.put(0, "MQCC_OK");
            completionCodeMap.put(1, "MQCC_WARNING");
            completionCodeMap.put(2, "MQCC_FAILED");
            completionCodeMap.put(-1, "MQCC_UNKNOWN");
        }
        if( reasonCodeMap == null ) {
            reasonCodeMap = new ConcurrentHashMap<>();
            reasonCodeMap.put(0, "MQRC_NONE");
            reasonCodeMap.put(900, "MQRC_APPL_FIRST");
            reasonCodeMap.put(999, "MQRC_APPL_LAST");
            reasonCodeMap.put(2001, "MQRC_ALIAS_BASE_Q_TYPE_ERROR");
            reasonCodeMap.put(2002, "MQRC_ALREADY_CONNECTED");
            reasonCodeMap.put(2003, "MQRC_BACKED_OUT");
            reasonCodeMap.put(2004, "MQRC_BUFFER_ERROR");
            reasonCodeMap.put(2005, "MQRC_BUFFER_LENGTH_ERROR");
            reasonCodeMap.put(2006, "MQRC_CHAR_ATTR_LENGTH_ERROR");
            reasonCodeMap.put(2007, "MQRC_CHAR_ATTRS_ERROR");
            reasonCodeMap.put(2008, "MQRC_CHAR_ATTRS_TOO_SHORT");
            reasonCodeMap.put(2009, "MQRC_CONNECTION_BROKEN");
            reasonCodeMap.put(2010, "MQRC_DATA_LENGTH_ERROR");
            reasonCodeMap.put(2011, "MQRC_DYNAMIC_Q_NAME_ERROR");
            reasonCodeMap.put(2012, "MQRC_ENVIRONMENT_ERROR");
            reasonCodeMap.put(2013, "MQRC_EXPIRY_ERROR");
            reasonCodeMap.put(2014, "MQRC_FEEDBACK_ERROR");
            reasonCodeMap.put(2016, "MQRC_GET_INHIBITED");
            reasonCodeMap.put(2017, "MQRC_HANDLE_NOT_AVAILABLE");
            reasonCodeMap.put(2018, "MQRC_HCONN_ERROR");
            reasonCodeMap.put(2019, "MQRC_HOBJ_ERROR");
            reasonCodeMap.put(2020, "MQRC_INHIBIT_VALUE_ERROR");
            reasonCodeMap.put(2021, "MQRC_INT_ATTR_COUNT_ERROR");
            reasonCodeMap.put(2022, "MQRC_INT_ATTR_COUNT_TOO_SMALL");
            reasonCodeMap.put(2023, "MQRC_INT_ATTRS_ARRAY_ERROR");
            reasonCodeMap.put(2024, "MQRC_SYNCPOINT_LIMIT_REACHED");
            reasonCodeMap.put(2025, "MQRC_MAX_CONNS_LIMIT_REACHED");
            reasonCodeMap.put(2026, "MQRC_MD_ERROR");
            reasonCodeMap.put(2027, "MQRC_MISSING_REPLY_TO_Q");
            reasonCodeMap.put(2029, "MQRC_MSG_TYPE_ERROR");
            reasonCodeMap.put(2030, "MQRC_MSG_TOO_BIG_FOR_Q");
            reasonCodeMap.put(2031, "MQRC_MSG_TOO_BIG_FOR_Q_MGR");
            reasonCodeMap.put(2033, "MQRC_NO_MSG_AVAILABLE");
            reasonCodeMap.put(2034, "MQRC_NO_MSG_UNDER_CURSOR");
            reasonCodeMap.put(2035, "MQRC_NOT_AUTHORIZED");
            reasonCodeMap.put(2036, "MQRC_NOT_OPEN_FOR_BROWSE");
            reasonCodeMap.put(2037, "MQRC_NOT_OPEN_FOR_INPUT");
            reasonCodeMap.put(2038, "MQRC_NOT_OPEN_FOR_INQUIRE");
            reasonCodeMap.put(2039, "MQRC_NOT_OPEN_FOR_OUTPUT");
            reasonCodeMap.put(2040, "MQRC_NOT_OPEN_FOR_SET");
            reasonCodeMap.put(2041, "MQRC_OBJECT_CHANGED");
            reasonCodeMap.put(2042, "MQRC_OBJECT_IN_USE");
            reasonCodeMap.put(2043, "MQRC_OBJECT_TYPE_ERROR");
            reasonCodeMap.put(2044, "MQRC_OD_ERROR");
            reasonCodeMap.put(2045, "MQRC_OPTION_NOT_VALID_FOR_TYPE");
            reasonCodeMap.put(2046, "MQRC_OPTIONS_ERROR");
            reasonCodeMap.put(2047, "MQRC_PERSISTENCE_ERROR");
            reasonCodeMap.put(2048, "MQRC_PERSISTENT_NOT_ALLOWED");
            reasonCodeMap.put(2049, "MQRC_PRIORITY_EXCEEDS_MAXIMUM");
            reasonCodeMap.put(2050, "MQRC_PRIORITY_ERROR");
            reasonCodeMap.put(2051, "MQRC_PUT_INHIBITED");
            reasonCodeMap.put(2052, "MQRC_Q_DELETED");
            reasonCodeMap.put(2053, "MQRC_Q_FULL");
            reasonCodeMap.put(2055, "MQRC_Q_NOT_EMPTY");
            reasonCodeMap.put(2056, "MQRC_Q_SPACE_NOT_AVAILABLE");
            reasonCodeMap.put(2057, "MQRC_Q_TYPE_ERROR");
            reasonCodeMap.put(2058, "MQRC_Q_MGR_NAME_ERROR");
            reasonCodeMap.put(2059, "MQRC_Q_MGR_NOT_AVAILABLE");
            reasonCodeMap.put(2061, "MQRC_REPORT_OPTIONS_ERROR");
            reasonCodeMap.put(2062, "MQRC_SECOND_MARK_NOT_ALLOWED");
            reasonCodeMap.put(2063, "MQRC_SECURITY_ERROR");
            reasonCodeMap.put(2065, "MQRC_SELECTOR_COUNT_ERROR");
            reasonCodeMap.put(2066, "MQRC_SELECTOR_LIMIT_EXCEEDED");
            reasonCodeMap.put(2067, "MQRC_SELECTOR_ERROR");
            reasonCodeMap.put(2068, "MQRC_SELECTOR_NOT_FOR_TYPE");
            reasonCodeMap.put(2069, "MQRC_SIGNAL_OUTSTANDING");
            reasonCodeMap.put(2070, "MQRC_SIGNAL_REQUEST_ACCEPTED");
            reasonCodeMap.put(2071, "MQRC_STORAGE_NOT_AVAILABLE");
            reasonCodeMap.put(2072, "MQRC_SYNCPOINT_NOT_AVAILABLE");
            reasonCodeMap.put(2075, "MQRC_TRIGGER_CONTROL_ERROR");
            reasonCodeMap.put(2076, "MQRC_TRIGGER_DEPTH_ERROR");
            reasonCodeMap.put(2077, "MQRC_TRIGGER_MSG_PRIORITY_ERR");
            reasonCodeMap.put(2078, "MQRC_TRIGGER_TYPE_ERROR");
            reasonCodeMap.put(2079, "MQRC_TRUNCATED_MSG_ACCEPTED");
            reasonCodeMap.put(2080, "MQRC_TRUNCATED_MSG_FAILED");
            reasonCodeMap.put(2082, "MQRC_UNKNOWN_ALIAS_BASE_Q");
            reasonCodeMap.put(2085, "MQRC_UNKNOWN_OBJECT_NAME");
            reasonCodeMap.put(2086, "MQRC_UNKNOWN_OBJECT_Q_MGR");
            reasonCodeMap.put(2087, "MQRC_UNKNOWN_REMOTE_Q_MGR");
            reasonCodeMap.put(2090, "MQRC_WAIT_INTERVAL_ERROR");
            reasonCodeMap.put(2091, "MQRC_XMIT_Q_TYPE_ERROR");
            reasonCodeMap.put(2092, "MQRC_XMIT_Q_USAGE_ERROR");
            reasonCodeMap.put(2093, "MQRC_NOT_OPEN_FOR_PASS_ALL");
            reasonCodeMap.put(2094, "MQRC_NOT_OPEN_FOR_PASS_IDENT");
            reasonCodeMap.put(2095, "MQRC_NOT_OPEN_FOR_SET_ALL");
            reasonCodeMap.put(2096, "MQRC_NOT_OPEN_FOR_SET_IDENT");
            reasonCodeMap.put(2097, "MQRC_CONTEXT_HANDLE_ERROR");
            reasonCodeMap.put(2098, "MQRC_CONTEXT_NOT_AVAILABLE");
            reasonCodeMap.put(2099, "MQRC_SIGNAL1_ERROR");
            reasonCodeMap.put(2100, "MQRC_OBJECT_ALREADY_EXISTS");
            reasonCodeMap.put(2101, "MQRC_OBJECT_DAMAGED");
            reasonCodeMap.put(2102, "MQRC_RESOURCE_PROBLEM");
            reasonCodeMap.put(2103, "MQRC_ANOTHER_Q_MGR_CONNECTED");
            reasonCodeMap.put(2104, "MQRC_UNKNOWN_REPORT_OPTION");
            reasonCodeMap.put(2105, "MQRC_STORAGE_CLASS_ERROR");
            reasonCodeMap.put(2106, "MQRC_COD_NOT_VALID_FOR_XCF_Q");
            reasonCodeMap.put(2107, "MQRC_XWAIT_CANCELED");
            reasonCodeMap.put(2108, "MQRC_XWAIT_ERROR");
            reasonCodeMap.put(2109, "MQRC_SUPPRESSED_BY_EXIT");
            reasonCodeMap.put(2110, "MQRC_FORMAT_ERROR");
            reasonCodeMap.put(2111, "MQRC_SOURCE_CCSID_ERROR");
            reasonCodeMap.put(2112, "MQRC_SOURCE_INTEGER_ENC_ERROR");
            reasonCodeMap.put(2113, "MQRC_SOURCE_DECIMAL_ENC_ERROR");
            reasonCodeMap.put(2114, "MQRC_SOURCE_FLOAT_ENC_ERROR");
            reasonCodeMap.put(2115, "MQRC_TARGET_CCSID_ERROR");
            reasonCodeMap.put(2116, "MQRC_TARGET_INTEGER_ENC_ERROR");
            reasonCodeMap.put(2117, "MQRC_TARGET_DECIMAL_ENC_ERROR");
            reasonCodeMap.put(2118, "MQRC_TARGET_FLOAT_ENC_ERROR");
            reasonCodeMap.put(2119, "MQRC_NOT_CONVERTED");
            reasonCodeMap.put(2120, "MQRC_CONVERTED_MSG_TOO_BIG");
            reasonCodeMap.put(2120, "MQRC_TRUNCATED");
            reasonCodeMap.put(2121, "MQRC_NO_EXTERNAL_PARTICIPANTS");
            reasonCodeMap.put(2122, "MQRC_PARTICIPANT_NOT_AVAILABLE");
            reasonCodeMap.put(2123, "MQRC_OUTCOME_MIXED");
            reasonCodeMap.put(2124, "MQRC_OUTCOME_PENDING");
            reasonCodeMap.put(2125, "MQRC_BRIDGE_STARTED");
            reasonCodeMap.put(2126, "MQRC_BRIDGE_STOPPED");
            reasonCodeMap.put(2127, "MQRC_ADAPTER_STORAGE_SHORTAGE");
            reasonCodeMap.put(2128, "MQRC_UOW_IN_PROGRESS");
            reasonCodeMap.put(2129, "MQRC_ADAPTER_CONN_LOAD_ERROR");
            reasonCodeMap.put(2130, "MQRC_ADAPTER_SERV_LOAD_ERROR");
            reasonCodeMap.put(2131, "MQRC_ADAPTER_DEFS_ERROR");
            reasonCodeMap.put(2132, "MQRC_ADAPTER_DEFS_LOAD_ERROR");
            reasonCodeMap.put(2133, "MQRC_ADAPTER_CONV_LOAD_ERROR");
            reasonCodeMap.put(2134, "MQRC_BO_ERROR");
            reasonCodeMap.put(2135, "MQRC_DH_ERROR");
            reasonCodeMap.put(2136, "MQRC_MULTIPLE_REASONS");
            reasonCodeMap.put(2137, "MQRC_OPEN_FAILED");
            reasonCodeMap.put(2138, "MQRC_ADAPTER_DISC_LOAD_ERROR");
            reasonCodeMap.put(2139, "MQRC_CNO_ERROR");
            reasonCodeMap.put(2140, "MQRC_CICS_WAIT_FAILED");
            reasonCodeMap.put(2141, "MQRC_DLH_ERROR");
            reasonCodeMap.put(2142, "MQRC_HEADER_ERROR");
            reasonCodeMap.put(2143, "MQRC_SOURCE_LENGTH_ERROR");
            reasonCodeMap.put(2144, "MQRC_TARGET_LENGTH_ERROR");
            reasonCodeMap.put(2145, "MQRC_SOURCE_BUFFER_ERROR");
            reasonCodeMap.put(2146, "MQRC_TARGET_BUFFER_ERROR");
            reasonCodeMap.put(2148, "MQRC_IIH_ERROR");
            reasonCodeMap.put(2149, "MQRC_PCF_ERROR");
            reasonCodeMap.put(2150, "MQRC_DBCS_ERROR");
            reasonCodeMap.put(2152, "MQRC_OBJECT_NAME_ERROR");
            reasonCodeMap.put(2153, "MQRC_OBJECT_Q_MGR_NAME_ERROR");
            reasonCodeMap.put(2154, "MQRC_RECS_PRESENT_ERROR");
            reasonCodeMap.put(2155, "MQRC_OBJECT_RECORDS_ERROR");
            reasonCodeMap.put(2156, "MQRC_RESPONSE_RECORDS_ERROR");
            reasonCodeMap.put(2157, "MQRC_ASID_MISMATCH");
            reasonCodeMap.put(2158, "MQRC_PMO_RECORD_FLAGS_ERROR");
            reasonCodeMap.put(2159, "MQRC_PUT_MSG_RECORDS_ERROR");
            reasonCodeMap.put(2160, "MQRC_CONN_ID_IN_USE");
            reasonCodeMap.put(2161, "MQRC_Q_MGR_QUIESCING");
            reasonCodeMap.put(2162, "MQRC_Q_MGR_STOPPING");
            reasonCodeMap.put(2163, "MQRC_DUPLICATE_RECOV_COORD");
            reasonCodeMap.put(2173, "MQRC_PMO_ERROR");
            reasonCodeMap.put(2182, "MQRC_API_EXIT_NOT_FOUND");
            reasonCodeMap.put(2183, "MQRC_API_EXIT_LOAD_ERROR");
            reasonCodeMap.put(2184, "MQRC_REMOTE_Q_NAME_ERROR");
            reasonCodeMap.put(2185, "MQRC_INCONSISTENT_PERSISTENCE");
            reasonCodeMap.put(2186, "MQRC_GMO_ERROR");
            reasonCodeMap.put(2187, "MQRC_CICS_BRIDGE_RESTRICTION");
            reasonCodeMap.put(2188, "MQRC_STOPPED_BY_CLUSTER_EXIT");
            reasonCodeMap.put(2189, "MQRC_CLUSTER_RESOLUTION_ERROR");
            reasonCodeMap.put(2190, "MQRC_CONVERTED_STRING_TOO_BIG");
            reasonCodeMap.put(2191, "MQRC_TMC_ERROR");
            reasonCodeMap.put(2192, "MQRC_PAGESET_FULL");
            reasonCodeMap.put(2192, "MQRC_STORAGE_MEDIUM_FULL");
            reasonCodeMap.put(2193, "MQRC_PAGESET_ERROR");
            reasonCodeMap.put(2194, "MQRC_NAME_NOT_VALID_FOR_TYPE");
            reasonCodeMap.put(2195, "MQRC_UNEXPECTED_ERROR");
            reasonCodeMap.put(2196, "MQRC_UNKNOWN_XMIT_Q");
            reasonCodeMap.put(2197, "MQRC_UNKNOWN_DEF_XMIT_Q");
            reasonCodeMap.put(2198, "MQRC_DEF_XMIT_Q_TYPE_ERROR");
            reasonCodeMap.put(2199, "MQRC_DEF_XMIT_Q_USAGE_ERROR");
            reasonCodeMap.put(2200, "MQRC_MSG_MARKED_BROWSE_CO_OP");
            reasonCodeMap.put(2201, "MQRC_NAME_IN_USE");
            reasonCodeMap.put(2202, "MQRC_CONNECTION_QUIESCING");
            reasonCodeMap.put(2203, "MQRC_CONNECTION_STOPPING");
            reasonCodeMap.put(2204, "MQRC_ADAPTER_NOT_AVAILABLE");
            reasonCodeMap.put(2206, "MQRC_MSG_ID_ERROR");
            reasonCodeMap.put(2207, "MQRC_CORREL_ID_ERROR");
            reasonCodeMap.put(2208, "MQRC_FILE_SYSTEM_ERROR");
            reasonCodeMap.put(2209, "MQRC_NO_MSG_LOCKED");
            reasonCodeMap.put(2210, "MQRC_SOAP_DOTNET_ERROR");
            reasonCodeMap.put(2211, "MQRC_SOAP_AXIS_ERROR");
            reasonCodeMap.put(2212, "MQRC_SOAP_URL_ERROR");
            reasonCodeMap.put(2216, "MQRC_FILE_NOT_AUDITED");
            reasonCodeMap.put(2217, "MQRC_CONNECTION_NOT_AUTHORIZED");
            reasonCodeMap.put(2218, "MQRC_MSG_TOO_BIG_FOR_CHANNEL");
            reasonCodeMap.put(2219, "MQRC_CALL_IN_PROGRESS");
            reasonCodeMap.put(2220, "MQRC_RMH_ERROR");
            reasonCodeMap.put(2222, "MQRC_Q_MGR_ACTIVE");
            reasonCodeMap.put(2223, "MQRC_Q_MGR_NOT_ACTIVE");
            reasonCodeMap.put(2224, "MQRC_Q_DEPTH_HIGH");
            reasonCodeMap.put(2225, "MQRC_Q_DEPTH_LOW");
            reasonCodeMap.put(2226, "MQRC_Q_SERVICE_INTERVAL_HIGH");
            reasonCodeMap.put(2227, "MQRC_Q_SERVICE_INTERVAL_OK");
            reasonCodeMap.put(2228, "MQRC_RFH_HEADER_FIELD_ERROR");
            reasonCodeMap.put(2229, "MQRC_RAS_PROPERTY_ERROR");
            reasonCodeMap.put(2232, "MQRC_UNIT_OF_WORK_NOT_STARTED");
            reasonCodeMap.put(2233, "MQRC_CHANNEL_AUTO_DEF_OK");
            reasonCodeMap.put(2234, "MQRC_CHANNEL_AUTO_DEF_ERROR");
            reasonCodeMap.put(2235, "MQRC_CFH_ERROR");
            reasonCodeMap.put(2236, "MQRC_CFIL_ERROR");
            reasonCodeMap.put(2237, "MQRC_CFIN_ERROR");
            reasonCodeMap.put(2238, "MQRC_CFSL_ERROR");
            reasonCodeMap.put(2239, "MQRC_CFST_ERROR");
            reasonCodeMap.put(2241, "MQRC_INCOMPLETE_GROUP");
            reasonCodeMap.put(2242, "MQRC_INCOMPLETE_MSG");
            reasonCodeMap.put(2243, "MQRC_INCONSISTENT_CCSIDS");
            reasonCodeMap.put(2244, "MQRC_INCONSISTENT_ENCODINGS");
            reasonCodeMap.put(2245, "MQRC_INCONSISTENT_UOW");
            reasonCodeMap.put(2246, "MQRC_INVALID_MSG_UNDER_CURSOR");
            reasonCodeMap.put(2247, "MQRC_MATCH_OPTIONS_ERROR");
            reasonCodeMap.put(2248, "MQRC_MDE_ERROR");
            reasonCodeMap.put(2249, "MQRC_MSG_FLAGS_ERROR");
            reasonCodeMap.put(2250, "MQRC_MSG_SEQ_NUMBER_ERROR");
            reasonCodeMap.put(2251, "MQRC_OFFSET_ERROR");
            reasonCodeMap.put(2252, "MQRC_ORIGINAL_LENGTH_ERROR");
            reasonCodeMap.put(2253, "MQRC_SEGMENT_LENGTH_ZERO");
            reasonCodeMap.put(2255, "MQRC_UOW_NOT_AVAILABLE");
            reasonCodeMap.put(2256, "MQRC_WRONG_GMO_VERSION");
            reasonCodeMap.put(2257, "MQRC_WRONG_MD_VERSION");
            reasonCodeMap.put(2258, "MQRC_GROUP_ID_ERROR");
            reasonCodeMap.put(2259, "MQRC_INCONSISTENT_BROWSE");
            reasonCodeMap.put(2260, "MQRC_XQH_ERROR");
            reasonCodeMap.put(2261, "MQRC_SRC_ENV_ERROR");
            reasonCodeMap.put(2262, "MQRC_SRC_NAME_ERROR");
            reasonCodeMap.put(2263, "MQRC_DEST_ENV_ERROR");
            reasonCodeMap.put(2264, "MQRC_DEST_NAME_ERROR");
            reasonCodeMap.put(2265, "MQRC_TM_ERROR");
            reasonCodeMap.put(2266, "MQRC_CLUSTER_EXIT_ERROR");
            reasonCodeMap.put(2267, "MQRC_CLUSTER_EXIT_LOAD_ERROR");
            reasonCodeMap.put(2268, "MQRC_CLUSTER_PUT_INHIBITED");
            reasonCodeMap.put(2269, "MQRC_CLUSTER_RESOURCE_ERROR");
            reasonCodeMap.put(2270, "MQRC_NO_DESTINATIONS_AVAILABLE");
            reasonCodeMap.put(2271, "MQRC_CONN_TAG_IN_USE");
            reasonCodeMap.put(2272, "MQRC_PARTIALLY_CONVERTED");
            reasonCodeMap.put(2273, "MQRC_CONNECTION_ERROR");
            reasonCodeMap.put(2274, "MQRC_OPTION_ENVIRONMENT_ERROR");
            reasonCodeMap.put(2277, "MQRC_CD_ERROR");
            reasonCodeMap.put(2278, "MQRC_CLIENT_CONN_ERROR");
            reasonCodeMap.put(2279, "MQRC_CHANNEL_STOPPED_BY_USER");
            reasonCodeMap.put(2280, "MQRC_HCONFIG_ERROR");
            reasonCodeMap.put(2281, "MQRC_FUNCTION_ERROR");
            reasonCodeMap.put(2282, "MQRC_CHANNEL_STARTED");
            reasonCodeMap.put(2283, "MQRC_CHANNEL_STOPPED");
            reasonCodeMap.put(2284, "MQRC_CHANNEL_CONV_ERROR");
            reasonCodeMap.put(2285, "MQRC_SERVICE_NOT_AVAILABLE");
            reasonCodeMap.put(2286, "MQRC_INITIALIZATION_FAILED");
            reasonCodeMap.put(2287, "MQRC_TERMINATION_FAILED");
            reasonCodeMap.put(2288, "MQRC_UNKNOWN_Q_NAME");
            reasonCodeMap.put(2289, "MQRC_SERVICE_ERROR");
            reasonCodeMap.put(2290, "MQRC_Q_ALREADY_EXISTS");
            reasonCodeMap.put(2291, "MQRC_USER_ID_NOT_AVAILABLE");
            reasonCodeMap.put(2292, "MQRC_UNKNOWN_ENTITY");
            reasonCodeMap.put(2293, "MQRC_UNKNOWN_AUTH_ENTITY");
            reasonCodeMap.put(2294, "MQRC_UNKNOWN_REF_OBJECT");
            reasonCodeMap.put(2295, "MQRC_CHANNEL_ACTIVATED");
            reasonCodeMap.put(2296, "MQRC_CHANNEL_NOT_ACTIVATED");
            reasonCodeMap.put(2297, "MQRC_UOW_CANCELED");
            reasonCodeMap.put(2298, "MQRC_FUNCTION_NOT_SUPPORTED");
            reasonCodeMap.put(2299, "MQRC_SELECTOR_TYPE_ERROR");
            reasonCodeMap.put(2300, "MQRC_COMMAND_TYPE_ERROR");
            reasonCodeMap.put(2301, "MQRC_MULTIPLE_INSTANCE_ERROR");
            reasonCodeMap.put(2302, "MQRC_SYSTEM_ITEM_NOT_ALTERABLE");
            reasonCodeMap.put(2303, "MQRC_BAG_CONVERSION_ERROR");
            reasonCodeMap.put(2304, "MQRC_SELECTOR_OUT_OF_RANGE");
            reasonCodeMap.put(2305, "MQRC_SELECTOR_NOT_UNIQUE");
            reasonCodeMap.put(2306, "MQRC_INDEX_NOT_PRESENT");
            reasonCodeMap.put(2307, "MQRC_STRING_ERROR");
            reasonCodeMap.put(2308, "MQRC_ENCODING_NOT_SUPPORTED");
            reasonCodeMap.put(2309, "MQRC_SELECTOR_NOT_PRESENT");
            reasonCodeMap.put(2310, "MQRC_OUT_SELECTOR_ERROR");
            reasonCodeMap.put(2311, "MQRC_STRING_TRUNCATED");
            reasonCodeMap.put(2312, "MQRC_SELECTOR_WRONG_TYPE");
            reasonCodeMap.put(2313, "MQRC_INCONSISTENT_ITEM_TYPE");
            reasonCodeMap.put(2314, "MQRC_INDEX_ERROR");
            reasonCodeMap.put(2315, "MQRC_SYSTEM_BAG_NOT_ALTERABLE");
            reasonCodeMap.put(2316, "MQRC_ITEM_COUNT_ERROR");
            reasonCodeMap.put(2317, "MQRC_FORMAT_NOT_SUPPORTED");
            reasonCodeMap.put(2318, "MQRC_SELECTOR_NOT_SUPPORTED");
            reasonCodeMap.put(2319, "MQRC_ITEM_VALUE_ERROR");
            reasonCodeMap.put(2320, "MQRC_HBAG_ERROR");
            reasonCodeMap.put(2321, "MQRC_PARAMETER_MISSING");
            reasonCodeMap.put(2322, "MQRC_CMD_SERVER_NOT_AVAILABLE");
            reasonCodeMap.put(2323, "MQRC_STRING_LENGTH_ERROR");
            reasonCodeMap.put(2324, "MQRC_INQUIRY_COMMAND_ERROR");
            reasonCodeMap.put(2325, "MQRC_NESTED_BAG_NOT_SUPPORTED");
            reasonCodeMap.put(2326, "MQRC_BAG_WRONG_TYPE");
            reasonCodeMap.put(2327, "MQRC_ITEM_TYPE_ERROR");
            reasonCodeMap.put(2328, "MQRC_SYSTEM_BAG_NOT_DELETABLE");
            reasonCodeMap.put(2329, "MQRC_SYSTEM_ITEM_NOT_DELETABLE");
            reasonCodeMap.put(2330, "MQRC_CODED_CHAR_SET_ID_ERROR");
            reasonCodeMap.put(2331, "MQRC_MSG_TOKEN_ERROR");
            reasonCodeMap.put(2332, "MQRC_MISSING_WIH");
            reasonCodeMap.put(2333, "MQRC_WIH_ERROR");
            reasonCodeMap.put(2334, "MQRC_RFH_ERROR");
            reasonCodeMap.put(2335, "MQRC_RFH_STRING_ERROR");
            reasonCodeMap.put(2336, "MQRC_RFH_COMMAND_ERROR");
            reasonCodeMap.put(2337, "MQRC_RFH_PARM_ERROR");
            reasonCodeMap.put(2338, "MQRC_RFH_DUPLICATE_PARM");
            reasonCodeMap.put(2339, "MQRC_RFH_PARM_MISSING");
            reasonCodeMap.put(2340, "MQRC_CHAR_CONVERSION_ERROR");
            reasonCodeMap.put(2341, "MQRC_UCS2_CONVERSION_ERROR");
            reasonCodeMap.put(2342, "MQRC_DB2_NOT_AVAILABLE");
            reasonCodeMap.put(2343, "MQRC_OBJECT_NOT_UNIQUE");
            reasonCodeMap.put(2344, "MQRC_CONN_TAG_NOT_RELEASED");
            reasonCodeMap.put(2345, "MQRC_CF_NOT_AVAILABLE");
            reasonCodeMap.put(2346, "MQRC_CF_STRUC_IN_USE");
            reasonCodeMap.put(2347, "MQRC_CF_STRUC_LIST_HDR_IN_USE");
            reasonCodeMap.put(2348, "MQRC_CF_STRUC_AUTH_FAILED");
            reasonCodeMap.put(2349, "MQRC_CF_STRUC_ERROR");
            reasonCodeMap.put(2350, "MQRC_CONN_TAG_NOT_USABLE");
            reasonCodeMap.put(2351, "MQRC_GLOBAL_UOW_CONFLICT");
            reasonCodeMap.put(2352, "MQRC_LOCAL_UOW_CONFLICT");
            reasonCodeMap.put(2353, "MQRC_HANDLE_IN_USE_FOR_UOW");
            reasonCodeMap.put(2354, "MQRC_UOW_ENLISTMENT_ERROR");
            reasonCodeMap.put(2355, "MQRC_UOW_MIX_NOT_SUPPORTED");
            reasonCodeMap.put(2356, "MQRC_WXP_ERROR");
            reasonCodeMap.put(2357, "MQRC_CURRENT_RECORD_ERROR");
            reasonCodeMap.put(2358, "MQRC_NEXT_OFFSET_ERROR");
            reasonCodeMap.put(2359, "MQRC_NO_RECORD_AVAILABLE");
            reasonCodeMap.put(2360, "MQRC_OBJECT_LEVEL_INCOMPATIBLE");
            reasonCodeMap.put(2361, "MQRC_NEXT_RECORD_ERROR");
            reasonCodeMap.put(2362, "MQRC_BACKOUT_THRESHOLD_REACHED");
            reasonCodeMap.put(2363, "MQRC_MSG_NOT_MATCHED");
            reasonCodeMap.put(2364, "MQRC_JMS_FORMAT_ERROR");
            reasonCodeMap.put(2365, "MQRC_SEGMENTS_NOT_SUPPORTED");
            reasonCodeMap.put(2366, "MQRC_WRONG_CF_LEVEL");
            reasonCodeMap.put(2367, "MQRC_CONFIG_CREATE_OBJECT");
            reasonCodeMap.put(2368, "MQRC_CONFIG_CHANGE_OBJECT");
            reasonCodeMap.put(2369, "MQRC_CONFIG_DELETE_OBJECT");
            reasonCodeMap.put(2370, "MQRC_CONFIG_REFRESH_OBJECT");
            reasonCodeMap.put(2371, "MQRC_CHANNEL_SSL_ERROR");
            reasonCodeMap.put(2372, "MQRC_PARTICIPANT_NOT_DEFINED");
            reasonCodeMap.put(2373, "MQRC_CF_STRUC_FAILED");
            reasonCodeMap.put(2374, "MQRC_API_EXIT_ERROR");
            reasonCodeMap.put(2375, "MQRC_API_EXIT_INIT_ERROR");
            reasonCodeMap.put(2376, "MQRC_API_EXIT_TERM_ERROR");
            reasonCodeMap.put(2377, "MQRC_EXIT_REASON_ERROR");
            reasonCodeMap.put(2378, "MQRC_RESERVED_VALUE_ERROR");
            reasonCodeMap.put(2379, "MQRC_NO_DATA_AVAILABLE");
            reasonCodeMap.put(2380, "MQRC_SCO_ERROR");
            reasonCodeMap.put(2381, "MQRC_KEY_REPOSITORY_ERROR");
            reasonCodeMap.put(2382, "MQRC_CRYPTO_HARDWARE_ERROR");
            reasonCodeMap.put(2383, "MQRC_AUTH_INFO_REC_COUNT_ERROR");
            reasonCodeMap.put(2384, "MQRC_AUTH_INFO_REC_ERROR");
            reasonCodeMap.put(2385, "MQRC_AIR_ERROR");
            reasonCodeMap.put(2386, "MQRC_AUTH_INFO_TYPE_ERROR");
            reasonCodeMap.put(2387, "MQRC_AUTH_INFO_CONN_NAME_ERROR");
            reasonCodeMap.put(2388, "MQRC_LDAP_USER_NAME_ERROR");
            reasonCodeMap.put(2389, "MQRC_LDAP_USER_NAME_LENGTH_ERR");
            reasonCodeMap.put(2390, "MQRC_LDAP_PASSWORD_ERROR");
            reasonCodeMap.put(2391, "MQRC_SSL_ALREADY_INITIALIZED");
            reasonCodeMap.put(2392, "MQRC_SSL_CONFIG_ERROR");
            reasonCodeMap.put(2393, "MQRC_SSL_INITIALIZATION_ERROR");
            reasonCodeMap.put(2394, "MQRC_Q_INDEX_TYPE_ERROR");
            reasonCodeMap.put(2395, "MQRC_CFBS_ERROR");
            reasonCodeMap.put(2396, "MQRC_SSL_NOT_ALLOWED");
            reasonCodeMap.put(2397, "MQRC_JSSE_ERROR");
            reasonCodeMap.put(2398, "MQRC_SSL_PEER_NAME_MISMATCH");
            reasonCodeMap.put(2399, "MQRC_SSL_PEER_NAME_ERROR");
            reasonCodeMap.put(2400, "MQRC_UNSUPPORTED_CIPHER_SUITE");
            reasonCodeMap.put(2401, "MQRC_SSL_CERTIFICATE_REVOKED");
            reasonCodeMap.put(2402, "MQRC_SSL_CERT_STORE_ERROR");
            reasonCodeMap.put(2406, "MQRC_CLIENT_EXIT_LOAD_ERROR");
            reasonCodeMap.put(2407, "MQRC_CLIENT_EXIT_ERROR");
            reasonCodeMap.put(2408, "MQRC_UOW_COMMITTED");
            reasonCodeMap.put(2409, "MQRC_SSL_KEY_RESET_ERROR");
            reasonCodeMap.put(2410, "MQRC_UNKNOWN_COMPONENT_NAME");
            reasonCodeMap.put(2411, "MQRC_LOGGER_STATUS");
            reasonCodeMap.put(2412, "MQRC_COMMAND_MQSC");
            reasonCodeMap.put(2413, "MQRC_COMMAND_PCF");
            reasonCodeMap.put(2414, "MQRC_CFIF_ERROR");
            reasonCodeMap.put(2415, "MQRC_CFSF_ERROR");
            reasonCodeMap.put(2416, "MQRC_CFGR_ERROR");
            reasonCodeMap.put(2417, "MQRC_MSG_NOT_ALLOWED_IN_GROUP");
            reasonCodeMap.put(2418, "MQRC_FILTER_OPERATOR_ERROR");
            reasonCodeMap.put(2419, "MQRC_NESTED_SELECTOR_ERROR");
            reasonCodeMap.put(2420, "MQRC_EPH_ERROR");
            reasonCodeMap.put(2421, "MQRC_RFH_FORMAT_ERROR");
            reasonCodeMap.put(2422, "MQRC_CFBF_ERROR");
            reasonCodeMap.put(2423, "MQRC_CLIENT_CHANNEL_CONFLICT");
            reasonCodeMap.put(2424, "MQRC_SD_ERROR");
            reasonCodeMap.put(2425, "MQRC_TOPIC_STRING_ERROR");
            reasonCodeMap.put(2426, "MQRC_STS_ERROR");
            reasonCodeMap.put(2428, "MQRC_NO_SUBSCRIPTION");
            reasonCodeMap.put(2429, "MQRC_SUBSCRIPTION_IN_USE");
            reasonCodeMap.put(2430, "MQRC_STAT_TYPE_ERROR");
            reasonCodeMap.put(2431, "MQRC_SUB_USER_DATA_ERROR");
            reasonCodeMap.put(2432, "MQRC_SUB_ALREADY_EXISTS");
            reasonCodeMap.put(2434, "MQRC_IDENTITY_MISMATCH");
            reasonCodeMap.put(2435, "MQRC_ALTER_SUB_ERROR");
            reasonCodeMap.put(2436, "MQRC_DURABILITY_NOT_ALLOWED");
            reasonCodeMap.put(2437, "MQRC_NO_RETAINED_MSG");
            reasonCodeMap.put(2438, "MQRC_SRO_ERROR");
            reasonCodeMap.put(2440, "MQRC_SUB_NAME_ERROR");
            reasonCodeMap.put(2441, "MQRC_OBJECT_STRING_ERROR");
            reasonCodeMap.put(2442, "MQRC_PROPERTY_NAME_ERROR");
            reasonCodeMap.put(2443, "MQRC_SEGMENTATION_NOT_ALLOWED");
            reasonCodeMap.put(2444, "MQRC_CBD_ERROR");
            reasonCodeMap.put(2445, "MQRC_CTLO_ERROR");
            reasonCodeMap.put(2446, "MQRC_NO_CALLBACKS_ACTIVE");
            reasonCodeMap.put(2448, "MQRC_CALLBACK_NOT_REGISTERED");
            reasonCodeMap.put(2457, "MQRC_OPTIONS_CHANGED");
            reasonCodeMap.put(2458, "MQRC_READ_AHEAD_MSGS");
            reasonCodeMap.put(2459, "MQRC_SELECTOR_SYNTAX_ERROR");
            reasonCodeMap.put(2460, "MQRC_HMSG_ERROR");
            reasonCodeMap.put(2461, "MQRC_CMHO_ERROR");
            reasonCodeMap.put(2462, "MQRC_DMHO_ERROR");
            reasonCodeMap.put(2463, "MQRC_SMPO_ERROR");
            reasonCodeMap.put(2464, "MQRC_IMPO_ERROR");
            reasonCodeMap.put(2465, "MQRC_PROPERTY_NAME_TOO_BIG");
            reasonCodeMap.put(2466, "MQRC_PROP_VALUE_NOT_CONVERTED");
            reasonCodeMap.put(2467, "MQRC_PROP_TYPE_NOT_SUPPORTED");
            reasonCodeMap.put(2469, "MQRC_PROPERTY_VALUE_TOO_BIG");
            reasonCodeMap.put(2470, "MQRC_PROP_CONV_NOT_SUPPORTED");
            reasonCodeMap.put(2471, "MQRC_PROPERTY_NOT_AVAILABLE");
            reasonCodeMap.put(2472, "MQRC_PROP_NUMBER_FORMAT_ERROR");
            reasonCodeMap.put(2473, "MQRC_PROPERTY_TYPE_ERROR");
            reasonCodeMap.put(2478, "MQRC_PROPERTIES_TOO_BIG");
            reasonCodeMap.put(2479, "MQRC_PUT_NOT_RETAINED");
            reasonCodeMap.put(2480, "MQRC_ALIAS_TARGTYPE_CHANGED");
            reasonCodeMap.put(2481, "MQRC_DMPO_ERROR");
            reasonCodeMap.put(2482, "MQRC_PD_ERROR");
            reasonCodeMap.put(2483, "MQRC_CALLBACK_TYPE_ERROR");
            reasonCodeMap.put(2484, "MQRC_CBD_OPTIONS_ERROR");
            reasonCodeMap.put(2485, "MQRC_MAX_MSG_LENGTH_ERROR");
            reasonCodeMap.put(2486, "MQRC_CALLBACK_ROUTINE_ERROR");
            reasonCodeMap.put(2487, "MQRC_CALLBACK_LINK_ERROR");
            reasonCodeMap.put(2488, "MQRC_OPERATION_ERROR");
            reasonCodeMap.put(2489, "MQRC_BMHO_ERROR");
            reasonCodeMap.put(2490, "MQRC_UNSUPPORTED_PROPERTY");
            reasonCodeMap.put(2492, "MQRC_PROP_NAME_NOT_CONVERTED");
            reasonCodeMap.put(2494, "MQRC_GET_ENABLED");
            reasonCodeMap.put(2495, "MQRC_MODULE_NOT_FOUND");
            reasonCodeMap.put(2496, "MQRC_MODULE_INVALID");
            reasonCodeMap.put(2497, "MQRC_MODULE_ENTRY_NOT_FOUND");
            reasonCodeMap.put(2498, "MQRC_MIXED_CONTENT_NOT_ALLOWED");
            reasonCodeMap.put(2499, "MQRC_MSG_HANDLE_IN_USE");
            reasonCodeMap.put(2500, "MQRC_HCONN_ASYNC_ACTIVE");
            reasonCodeMap.put(2501, "MQRC_MHBO_ERROR");
            reasonCodeMap.put(2502, "MQRC_PUBLICATION_FAILURE");
            reasonCodeMap.put(2503, "MQRC_SUB_INHIBITED");
            reasonCodeMap.put(2504, "MQRC_SELECTOR_ALWAYS_FALSE");
            reasonCodeMap.put(2507, "MQRC_XEPO_ERROR");
            reasonCodeMap.put(2509, "MQRC_DURABILITY_NOT_ALTERABLE");
            reasonCodeMap.put(2510, "MQRC_TOPIC_NOT_ALTERABLE");
            reasonCodeMap.put(2512, "MQRC_SUBLEVEL_NOT_ALTERABLE");
            reasonCodeMap.put(2513, "MQRC_PROPERTY_NAME_LENGTH_ERR");
            reasonCodeMap.put(2514, "MQRC_DUPLICATE_GROUP_SUB");
            reasonCodeMap.put(2515, "MQRC_GROUPING_NOT_ALTERABLE");
            reasonCodeMap.put(2516, "MQRC_SELECTOR_INVALID_FOR_TYPE");
            reasonCodeMap.put(2517, "MQRC_HOBJ_QUIESCED");
            reasonCodeMap.put(2518, "MQRC_HOBJ_QUIESCED_NO_MSGS");
            reasonCodeMap.put(2519, "MQRC_SELECTION_STRING_ERROR");
            reasonCodeMap.put(2520, "MQRC_RES_OBJECT_STRING_ERROR");
            reasonCodeMap.put(2521, "MQRC_CONNECTION_SUSPENDED");
            reasonCodeMap.put(2522, "MQRC_INVALID_DESTINATION");
            reasonCodeMap.put(2523, "MQRC_INVALID_SUBSCRIPTION");
            reasonCodeMap.put(2524, "MQRC_SELECTOR_NOT_ALTERABLE");
            reasonCodeMap.put(2525, "MQRC_RETAINED_MSG_Q_ERROR");
            reasonCodeMap.put(2526, "MQRC_RETAINED_NOT_DELIVERED");
            reasonCodeMap.put(2527, "MQRC_RFH_RESTRICTED_FORMAT_ERR");
            reasonCodeMap.put(2528, "MQRC_CONNECTION_STOPPED");
            reasonCodeMap.put(2529, "MQRC_ASYNC_UOW_CONFLICT");
            reasonCodeMap.put(2530, "MQRC_ASYNC_XA_CONFLICT");
            reasonCodeMap.put(2531, "MQRC_PUBSUB_INHIBITED");
            reasonCodeMap.put(2532, "MQRC_MSG_HANDLE_COPY_FAILURE");
            reasonCodeMap.put(2533, "MQRC_DEST_CLASS_NOT_ALTERABLE");
            reasonCodeMap.put(2534, "MQRC_OPERATION_NOT_ALLOWED");
            reasonCodeMap.put(2535, "MQRC_ACTION_ERROR");
            reasonCodeMap.put(2537, "MQRC_CHANNEL_NOT_AVAILABLE");
            reasonCodeMap.put(2538, "MQRC_HOST_NOT_AVAILABLE");
            reasonCodeMap.put(2539, "MQRC_CHANNEL_CONFIG_ERROR");
            reasonCodeMap.put(2540, "MQRC_UNKNOWN_CHANNEL_NAME");
            reasonCodeMap.put(2541, "MQRC_LOOPING_PUBLICATION");
            reasonCodeMap.put(2542, "MQRC_ALREADY_JOINED");
            reasonCodeMap.put(2543, "MQRC_STANDBY_Q_MGR");
            reasonCodeMap.put(2544, "MQRC_RECONNECTING");
            reasonCodeMap.put(2545, "MQRC_RECONNECTED");
            reasonCodeMap.put(2546, "MQRC_RECONNECT_QMID_MISMATCH");
            reasonCodeMap.put(2547, "MQRC_RECONNECT_INCOMPATIBLE");
            reasonCodeMap.put(2548, "MQRC_RECONNECT_FAILED");
            reasonCodeMap.put(2549, "MQRC_CALL_INTERRUPTED");
            reasonCodeMap.put(2550, "MQRC_NO_SUBS_MATCHED");
            reasonCodeMap.put(2551, "MQRC_SELECTION_NOT_AVAILABLE");
            reasonCodeMap.put(2552, "MQRC_CHANNEL_SSL_WARNING");
            reasonCodeMap.put(2553, "MQRC_OCSP_URL_ERROR");
            reasonCodeMap.put(2554, "MQRC_CONTENT_ERROR");
            reasonCodeMap.put(2555, "MQRC_RECONNECT_Q_MGR_REQD");
            reasonCodeMap.put(2556, "MQRC_RECONNECT_TIMED_OUT");
            reasonCodeMap.put(2557, "MQRC_PUBLISH_EXIT_ERROR");
            reasonCodeMap.put(2558, "MQRC_COMMINFO_ERROR");
            reasonCodeMap.put(2559, "MQRC_DEF_SYNCPOINT_INHIBITED");
            reasonCodeMap.put(2560, "MQRC_MULTICAST_ONLY");
            reasonCodeMap.put(2561, "MQRC_DATA_SET_NOT_AVAILABLE");
            reasonCodeMap.put(2562, "MQRC_GROUPING_NOT_ALLOWED");
            reasonCodeMap.put(2563, "MQRC_GROUP_ADDRESS_ERROR");
            reasonCodeMap.put(2564, "MQRC_MULTICAST_CONFIG_ERROR");
            reasonCodeMap.put(2565, "MQRC_MULTICAST_INTERFACE_ERROR");
            reasonCodeMap.put(2566, "MQRC_MULTICAST_SEND_ERROR");
            reasonCodeMap.put(2567, "MQRC_MULTICAST_INTERNAL_ERROR");
            reasonCodeMap.put(2568, "MQRC_CONNECTION_NOT_AVAILABLE");
            reasonCodeMap.put(2569, "MQRC_SYNCPOINT_NOT_ALLOWED");
            reasonCodeMap.put(2570, "MQRC_SSL_ALT_PROVIDER_REQUIRED");
            reasonCodeMap.put(2571, "MQRC_MCAST_PUB_STATUS");
            reasonCodeMap.put(2572, "MQRC_MCAST_SUB_STATUS");
            reasonCodeMap.put(2573, "MQRC_PRECONN_EXIT_LOAD_ERROR");
            reasonCodeMap.put(2574, "MQRC_PRECONN_EXIT_NOT_FOUND");
            reasonCodeMap.put(2575, "MQRC_PRECONN_EXIT_ERROR");
            reasonCodeMap.put(2576, "MQRC_CD_ARRAY_ERROR");
            reasonCodeMap.put(2577, "MQRC_CHANNEL_BLOCKED");
            reasonCodeMap.put(2578, "MQRC_CHANNEL_BLOCKED_WARNING");
            reasonCodeMap.put(2579, "MQRC_SUBSCRIPTION_CREATE");
            reasonCodeMap.put(2580, "MQRC_SUBSCRIPTION_DELETE");
            reasonCodeMap.put(2581, "MQRC_SUBSCRIPTION_CHANGE");
            reasonCodeMap.put(2582, "MQRC_SUBSCRIPTION_REFRESH");
            reasonCodeMap.put(2583, "MQRC_INSTALLATION_MISMATCH");
            reasonCodeMap.put(2584, "MQRC_NOT_PRIVILEGED");
            reasonCodeMap.put(2586, "MQRC_PROPERTIES_DISABLED");
            reasonCodeMap.put(2587, "MQRC_HMSG_NOT_AVAILABLE");
            reasonCodeMap.put(2588, "MQRC_EXIT_PROPS_NOT_SUPPORTED");
            reasonCodeMap.put(2589, "MQRC_INSTALLATION_MISSING");
            reasonCodeMap.put(2590, "MQRC_FASTPATH_NOT_AVAILABLE");
            reasonCodeMap.put(2591, "MQRC_CIPHER_SPEC_NOT_SUITE_B");
            reasonCodeMap.put(2592, "MQRC_SUITE_B_ERROR");
            reasonCodeMap.put(2593, "MQRC_CERT_VAL_POLICY_ERROR");
            reasonCodeMap.put(2594, "MQRC_PASSWORD_PROTECTION_ERROR");
            reasonCodeMap.put(2595, "MQRC_CSP_ERROR");
            reasonCodeMap.put(2596, "MQRC_CERT_LABEL_NOT_ALLOWED");
            reasonCodeMap.put(6100, "MQRC_REOPEN_EXCL_INPUT_ERROR");
            reasonCodeMap.put(6101, "MQRC_REOPEN_INQUIRE_ERROR");
            reasonCodeMap.put(6102, "MQRC_REOPEN_SAVED_CONTEXT_ERR");
            reasonCodeMap.put(6103, "MQRC_REOPEN_TEMPORARY_Q_ERROR");
            reasonCodeMap.put(6104, "MQRC_ATTRIBUTE_LOCKED");
            reasonCodeMap.put(6105, "MQRC_CURSOR_NOT_VALID");
            reasonCodeMap.put(6106, "MQRC_ENCODING_ERROR");
            reasonCodeMap.put(6107, "MQRC_STRUC_ID_ERROR");
            reasonCodeMap.put(6108, "MQRC_NULL_POINTER");
            reasonCodeMap.put(6109, "MQRC_NO_CONNECTION_REFERENCE");
            reasonCodeMap.put(6110, "MQRC_NO_BUFFER");
            reasonCodeMap.put(6111, "MQRC_BINARY_DATA_LENGTH_ERROR");
            reasonCodeMap.put(6112, "MQRC_BUFFER_NOT_AUTOMATIC");
            reasonCodeMap.put(6113, "MQRC_INSUFFICIENT_BUFFER");
            reasonCodeMap.put(6114, "MQRC_INSUFFICIENT_DATA");
            reasonCodeMap.put(6115, "MQRC_DATA_TRUNCATED");
            reasonCodeMap.put(6116, "MQRC_ZERO_LENGTH");
            reasonCodeMap.put(6117, "MQRC_NEGATIVE_LENGTH");
            reasonCodeMap.put(6118, "MQRC_NEGATIVE_OFFSET");
            reasonCodeMap.put(6119, "MQRC_INCONSISTENT_FORMAT");
            reasonCodeMap.put(6120, "MQRC_INCONSISTENT_OBJECT_STATE");
            reasonCodeMap.put(6121, "MQRC_CONTEXT_OBJECT_NOT_VALID");
            reasonCodeMap.put(6122, "MQRC_CONTEXT_OPEN_ERROR");
            reasonCodeMap.put(6123, "MQRC_STRUC_LENGTH_ERROR");
            reasonCodeMap.put(6124, "MQRC_NOT_CONNECTED");
            reasonCodeMap.put(6125, "MQRC_NOT_OPEN");
            reasonCodeMap.put(6126, "MQRC_DISTRIBUTION_LIST_EMPTY");
            reasonCodeMap.put(6127, "MQRC_INCONSISTENT_OPEN_OPTIONS");
            reasonCodeMap.put(6128, "MQRC_WRONG_VERSION");
            reasonCodeMap.put(6129, "MQRC_REFERENCE_ERROR");
            reasonCodeMap.put(6130, "MQRC_XR_NOT_AVAILABLE");
        }
    }

    /*
    public static Throwable getMQException(Exception exception) {
        if( exception == null ) return null;
        return getMQException(exception.getCause());
    }

     */

    public static Throwable getMQException( Throwable throwable ) {
        if( throwable == null ) return null;
        if( "com.ibm.mq.headers.MQExceptionWrapper".equals(throwable.getClass().getCanonicalName()) ) return throwable;
        return getMQException(throwable.getCause());
    }
}
